---
# /apps
#       /guacamole 
#       /jdbc
#       /sql

- name: Create dir
  file: dest={{ item }}  state=directory
        owner={{ stack_user }} group={{ stack_user_group }}
  with_items:
        - "{{ install_dir }}/guacamole"
        - /var/lib/guacamole
        - /usr/share/tomcat/.guacamole/extensions
        - /usr/share/tomcat/.guacamole/lib

- name: Add Felfert Repo
  copy: src=felfert.repo
        dest=/etc/yum.repos.d/
        owner=root group=root mode=0644

- name: Install prerequisites
  yum:  pkg={{ item }} state=installed update_cache=yes
  with_items:
      # WebServer
      - tomcat
      - tomcat-webapps
      - tomcat-admin-webapps
      # Others 
      - pv
      - dialog
      - gcc
      - cairo-devel
      - libpng-devel
      - uuid-devel
      - freerdp-devel
      - freerdp-plugins
      - pango-devel
      - libssh2-devel
      - libtelnet-devel
      - libvncserver-devel
      - pulseaudio-libs-devel
      - openssl-devel
      - libvorbis-devel
      - libwebp-devel
      - gnu-free-mono-fonts
      # Troublesome -.-
      # - libjpeg-turbo-official-1.4.2
      - libjpeg-turbo-devel
      - libjpeg-turbo
      # Optional ?
      - libguac
      - libguac-client-vnc
      - libguac-client-rdp
      - libguac-client-ssh
      - terminus-fonts
      # - java-1.7.0-openjdk.x86_64
      # SQL
      - mariadb
      - mariadb-server
      - MySQL-python

- name: Download File --> Guacamole-server
  get_url:
    url: "{{ guac_server_link }}"
    dest: "/tmp/{{ guac_server_filename }}"
    validate_certs: False
  
- name: Extract file --> Guacamole-server
  unarchive:
    src: "/tmp/{{ guac_server_filename }}"
    dest: "{{ install_dir }}/guacamole"
    copy: no
  sudo: yes
  
- name: Remove download file --> Guacamole-server
  file: path="/tmp/{{ guac_server_filename }}" state=absent

- name: Config-Make-MakeInstall-ldconfig
  shell: "{{ item }}"
  with_items:
      - './configure --with-init-dir=/etc/init.d'
      - make
      - make install
      - ldconfig
  args:
    chdir: "{{ install_dir }}/guacamole/{{ guac_server_name}}"
  sudo: yes

- name: Download file --> Guacamole war
  get_url:
    url: "{{ guac_war_link }}"
    dest: "/var/lib/guacamole/guacamole.war"
    validate_certs: False
  register: downloaded_guacClient

- name: Remove default rdp lib
  file: path=/usr/lib64/freerdp/guacdr.so state=absent
  sudo: yes

- name: Symlink Files --> Guacamole war
  file: src={{ item.source }} dest={{ item.target }} state=link
        owner={{ stack_user }} group={{ stack_user_group }}
  with_items:
      - { source: /var/lib/guacamole/guacamole.war,
          target: /var/lib/tomcat/webapps/guacamole.war }
      - { source: /usr/local/lib/freerdp/guacdr.so,
          target: /usr/lib64/freerdp/guacdr.so }
  
# SQL: JDBC
- name: Download file --> Guacamole jdbc
  get_url:
    url: "{{ guac_jdbc_link }}"
    dest: "/tmp/{{ guac_jdbc_filename }}"
    validate_certs: False
  register: downloaded_guac_jdbc
  
- name: Extract file --> Guacamole jdbc
  unarchive:
    src: "/tmp/{{ guac_jdbc_filename }}"
    dest: "{{ install_dir }}/guacamole"
    owner: "{{ stack_user }}"
    group: "{{ stack_user_group }}"
    mode: 0777
    copy: no
  sudo: yes
  
- name: Remove download file --> Guacamole jdbc
  file: path="/tmp/{{ guac_jdbc_filename }}" state=absent

- name: JDBC move file --> Guacamole jdbc
  command: cp "{{ install_dir }}/guacamole/{{ guac_jdbc_name }}/mysql/guacamole-auth-jdbc-mysql-{{ guac_version }}.jar" "/usr/share/tomcat/.guacamole/extensions/guacamole-auth-jdbc-mysql-{{ guac_version }}.jar"
  sudo: yes

# SQL: MySQL
- name: Download file --> mysql-connector
  get_url:
    url: "{{ guac_mysql_link }}"
    dest: "/tmp/{{ guac_mysql_filename }}"
    validate_certs: False
  
- name: Extract file --> msql-connector
  unarchive:
    src: "/tmp/{{ guac_mysql_filename }}"
    dest: "{{ install_dir }}/guacamole"
    copy: no
  sudo: yes
  
- name: Remove download file --> msql-connector
  file: path={{ guac_mysql_filename }} state=absent

- name: Move File --> msql-connector
  command: cp "{{ install_dir }}/guacamole/{{ guac_mysql_name }}/{{ guac_mysql_name }}-bin.jar" "/usr/share/tomcat/.guacamole/lib/{{ guac_mysql_name }}-bin.jar"
  sudo: yes

# Restart Service
- name: SQL --> Restart Service
  service: name=mariadb.service enabled=yes state=started
  
# SQL
- name: Add .my.cnf
  template: src=my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=0600

# - name: Set root Password
#   mysql_user: name=root host={{ item }} password={{ mysql_root_password }} state=present
#   with_items:
#     - localhost
#     - 127.0.0.1
#     - ::1

# Move to mysql role!
# - name: Reload privilege tables
#   command: 'mysql -ne FLUSH PRIVILEGES'
#   changed_when: False

# - name: Remove anonymous users
#   command: 'mysql -ne "{{ item }}"'
#   with_items:
#     - DELETE FROM mysql.user WHERE User=''
#   changed_when: False

# - name: Disallow root login remotely
#   command: 'mysql -ne "{{ item }}"'
#   with_items:
#     - DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1')
#   changed_when: False

# - name: Remove test database and access to it
#   command: 'mysql -ne "{{ item }}"'
#   with_items:
#     - DROP DATABASE test
#     - DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%'
#   changed_when: False
#   ignore_errors: True

# - name: Reload privilege tables
#   command: 'mysql -ne "{{ item }}"'
#   with_items:
#     - FLUSH PRIVILEGES
#   changed_when: False
# END: Move to mysql role!

- name: SQL Setup --> Create db-user
  shell: mysql -ne "{{ item }}"
  with_items:
    - create database guacdb;
    - create user 'guacuser'@'localhost' identified by 'guacDBpass';
    - grant select,insert,update,delete on guacdb.* to 'guacuser'@'localhost';
    - FLUSH PRIVILEGES;
  sudo: yes

- name:     Run 2
  shell:  mysql guacdb < "{{ install_dir }}/guacamole/{{ guac_jdbc_name }}/mysql/schema/{{ item }}"
  with_items:
      - 001-create-schema.sql
      - 002-create-admin-user.sql

- name: Config file
  template: src=guacamole.propreties.j2
            dest="{{ install_dir }}/guacamole/guacamole.properties" owner=root group=root mode=0644

- name: Symlink config to Tomcat
  file: 
    src: "{{ install_dir }}/guacamole/guacamole.properties"
    dest: /usr/share/tomcat/.guacamole/guacamole.properties
    state: link

#Config
- name: Set dir owner
  file: dest="{{ install_dir }}" owner={{ stack_user }}
        group={{ stack_user_group }} recurse=yes

- name: Service --> Tomcat
  service: name=tomcat.service enabled=yes state=started

- name: Service --> SQL
  service: name=mariadb.service enabled=yes state=started

- name: Service --> Guacamole
  command: chkconfig guacd on
  sudo: yes

- name: Service --> SQL
  service: name=guacd.service enabled=yes state=started